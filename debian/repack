#!/usr/bin/env bash
set -e
set -x
version=${1:-0.37.0}
wrkdir="$(mktemp -d)"
# Trap exit to cleanup the workdir
exit_sigspecs="ERR EXIT SIGTERM SIGHUP SIGINT SIGQUIT"

function cleanup_exit() {
    exit_status=$?
    trap - $exit_sigspecs

    rm -rf "${wrk_dir}"
    printf "Cleaned up working directory ‘${wrk_dir}’\n"

    exit $exit_status
}
trap cleanup_exit $exit_sigspecs




function clone_repos {

    for repo in https://github.com/facebook/mcrouter.git \
                    https://github.com/facebook/folly.git \
                    https://github.com/facebook/wangle.git
    do
        (cd "$wrkdir" && git clone $repo)
    done
}

function prepare  {
    srcdir=${wrkdir}/mcrouter/mcrouter
    tpdir=${srcdir}/third-party
    # Copy additional repos to third-party
    for repo in folly wangle; do
        _src=${wrkdir}/${repo}
        _dst=${tpdir}/$repo
        mkdir -p "${_dst}"
        # use the latest tagged version of the repo
        tp_version=$(git -C "$_src" describe --abbrev=0)
        echo -n $tp_version >> "${srcdir}/${repo}_version"
        git -C "$_src" archive --format tar "$tp_version" | tar -C "$_dst" -xf -
    done
    # Copy files and external repos
    for i in LICENSE README.md;
    do
        mv ${wrkdir}/mcrouter/${i} ${srcdir}
    done

    # Remove git artifacts
    find ${wrkdir}/mcrouter -name .git | xargs --no-run-if-empty rm -rf
}


# Create the workdir and clone all the repositories
mkdir -p $wrkdir
clone_repos
prepare
echo "Rebuilding the tar file"
tar Jcf mcrouter-${version}.tar.xz -C $wrkdir/mcrouter mcrouter
