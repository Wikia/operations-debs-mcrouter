#!/usr/bin/env bash
set -e
set -x
version=${1:-0.24.0}
wrkdir="$(mktemp -d)"

# Trap exit to cleanup the workdir
exit_sigspecs="ERR EXIT SIGTERM SIGHUP SIGINT SIGQUIT"

function cleanup_exit() {
    exit_status=$?
    trap - $exit_sigspecs

    rm -rf "${wrk_dir}"
    printf "Cleaned up working directory ‘${wrk_dir}’\n"

    exit $exit_status
}
trap cleanup_exit $exit_sigspecs

function clone_repos {

    for repo in https://github.com/facebook/mcrouter.git \
                    https://github.com/facebook/folly.git \
                    https://github.com/facebook/wangle.git \
                    https://github.com/facebook/fbthrift.git;
    do
        (cd ${wrkdir} && git clone $repo)
    done

    echo "Checking out version ${version}"
    (cd ${wrkdir}/mcrouter && git checkout v${version})
}

function prepare  {
    srcdir=${wrkdir}/mcrouter/mcrouter
    tpdir=${srcdir}/third-party
    # Copy additional repos to third-party
    mkdir -p ${tpdir}
    for repo in folly wangle fbthrift;
    do
        # Store the revision of the dependent repos so that we know it
        (cd ${wrkdir}/${repo} && \
                git rev-parse --verify HEAD > ${srcdir}/${repo}_version)
        cp -ax ${wrkdir}/${repo} ${tpdir}
    done
    # Copy files and external repos
    for i in LICENSE PATENTS README.md;
    do
        mv ${wrkdir}/mcrouter/${i} ${srcdir}
    done

    # Remove git artifacts
    find ${wrkdir}/mcrouter -name .git | xargs --no-run-if-empty rm -rf
}


# Create the workdir and clone all the repositories
mkdir -p $wrkdir
clone_repos
prepare
echo "Rebuilding the tar file"
tar Jcf mcrouter-${version}.tar.xz -C $wrkdir/mcrouter mcrouter
